

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Apr 06 18:30:54 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293                           
   294                           	psect	idataBANK0
   295  0270                     __pidataBANK0:
   296                           
   297                           ;initializer for _numero
   298  0270  347B               	retlw	123
   299  0006                     _PORTB	set	6
   300  0008                     _PORTDbits	set	8
   301  0007                     _PORTC	set	7
   302  0008                     _PORTD	set	8
   303  0005                     _PORTA	set	5
   304  0001                     _TMR0	set	1
   305  0006                     _PORTBbits	set	6
   306  000B                     _INTCONbits	set	11
   307  008F                     _OSCCONbits	set	143
   308  0095                     _WPUBbits	set	149
   309  0081                     _OPTION_REGbits	set	129
   310  0096                     _IOCBbits	set	150
   311  0088                     _TRISD	set	136
   312  0087                     _TRISC	set	135
   313  0086                     _TRISB	set	134
   314  0085                     _TRISA	set	133
   315  0189                     _ANSELH	set	393
   316  0188                     _ANSEL	set	392
   317                           
   318                           	psect	cinit
   319  0011                     start_initialization:	
   320                           ; #config settings
   321                           
   322  0011                     __initialization:
   323                           
   324                           ; Initialize objects allocated to BANK0
   325  0011  120A  118A  2270  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   326  0016  00BD               	movwf	__pdataBANK0& (0+127)
   327                           
   328                           ; Clear objects allocated to BANK0
   329  0017  01B6               	clrf	__pbssBANK0& (0+127)
   330  0018  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   331  0019  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   332  001A  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   333  001B  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   334  001C  01BB               	clrf	(__pbssBANK0+5)& (0+127)
   335  001D  01BC               	clrf	(__pbssBANK0+6)& (0+127)
   336                           
   337                           ; Clear objects allocated to COMMON
   338  001E  01FB               	clrf	__pbssCOMMON& (0+127)
   339  001F                     end_of_initialization:	
   340                           ;End of C runtime variable initialization code
   341                           
   342  001F                     __end_of__initialization:
   343  001F  0183               	clrf	3
   344  0020  120A  118A  2A56   	ljmp	_main	;jump to C main() function
   345                           
   346                           	psect	bssCOMMON
   347  007B                     __pbssCOMMON:
   348  007B                     _Bandera_multiplexado:
   349  007B                     	ds	1
   350                           
   351                           	psect	bssBANK0
   352  0036                     __pbssBANK0:
   353  0036                     _contador:
   354  0036                     	ds	1
   355  0037                     _num:
   356  0037                     	ds	6
   357                           
   358                           	psect	dataBANK0
   359  003D                     __pdataBANK0:
   360  003D                     _numero:
   361  003D                     	ds	1
   362                           
   363                           	psect	cstackCOMMON
   364  0070                     __pcstackCOMMON:
   365  0070                     ?_mostrar:
   366  0070                     ?_setup:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_tabla:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_isr:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_main:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     tabla@numero:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 2 bytes @ 0x0
   383  0070                     	ds	2
   384  0072                     ??_tabla:
   385                           
   386                           ; 1 bytes @ 0x2
   387  0072                     	ds	1
   388  0073                     tabla@valor:
   389                           
   390                           ; 1 bytes @ 0x3
   391  0073                     	ds	1
   392  0074                     ??_mostrar:
   393                           
   394                           ; 1 bytes @ 0x4
   395  0074                     	ds	2
   396  0076                     mostrar@num:
   397                           
   398                           ; 1 bytes @ 0x6
   399  0076                     	ds	1
   400  0077                     ??_isr:
   401                           
   402                           ; 1 bytes @ 0x7
   403  0077                     	ds	4
   404                           
   405                           	psect	cstackBANK0
   406  0020                     __pcstackBANK0:
   407  0020                     ??_setup:
   408  0020                     ?___wmul:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0020                     ___wmul@multiplier:	
   412                           ; 2 bytes @ 0x0
   413                           
   414                           
   415                           ; 2 bytes @ 0x0
   416  0020                     	ds	2
   417  0022                     ___wmul@multiplicand:
   418                           
   419                           ; 2 bytes @ 0x2
   420  0022                     	ds	2
   421  0024                     ??___wmul:
   422  0024                     ___wmul@product:	
   423                           ; 1 bytes @ 0x4
   424                           
   425                           
   426                           ; 2 bytes @ 0x4
   427  0024                     	ds	2
   428  0026                     ?___awdiv:
   429  0026                     ___awdiv@divisor:	
   430                           ; 2 bytes @ 0x6
   431                           
   432                           
   433                           ; 2 bytes @ 0x6
   434  0026                     	ds	2
   435  0028                     ___awdiv@dividend:
   436                           
   437                           ; 2 bytes @ 0x8
   438  0028                     	ds	2
   439  002A                     ??___awdiv:
   440                           
   441                           ; 1 bytes @ 0xA
   442  002A                     	ds	1
   443  002B                     ___awdiv@counter:
   444                           
   445                           ; 1 bytes @ 0xB
   446  002B                     	ds	1
   447  002C                     ___awdiv@sign:
   448                           
   449                           ; 1 bytes @ 0xC
   450  002C                     	ds	1
   451  002D                     ___awdiv@quotient:
   452                           
   453                           ; 2 bytes @ 0xD
   454  002D                     	ds	2
   455  002F                     ?_separacion:
   456  002F                     separacion@num:	
   457                           ; 1 bytes @ 0xF
   458                           
   459                           
   460                           ; 1 bytes @ 0xF
   461  002F                     	ds	1
   462  0030                     ??_separacion:
   463                           
   464                           ; 1 bytes @ 0x10
   465  0030                     	ds	4
   466  0034                     separacion@a:
   467                           
   468                           ; 1 bytes @ 0x14
   469  0034                     	ds	1
   470  0035                     ??_main:
   471                           
   472                           ; 1 bytes @ 0x15
   473  0035                     	ds	1
   474                           
   475                           	psect	maintext
   476  0256                     __pmaintext:	
   477 ;;
   478 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   479 ;;
   480 ;; *************** function _main *****************
   481 ;; Defined at:
   482 ;;		line 83 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : B00/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          0       1       0       0       0
   499 ;;      Totals:         0       1       0       0       0
   500 ;;Total ram usage:        1 bytes
   501 ;; Hardware stack levels required when called: 5
   502 ;; This function calls:
   503 ;;		_separacion
   504 ;;		_setup
   505 ;; This function is called by:
   506 ;;		Startup code after reset
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510  0256                     _main:	
   511                           ;psect for function _main
   512                           
   513  0256                     l1120:	
   514                           ;incstack = 0
   515                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   516                           
   517                           
   518                           ;main.c: 84:     setup();
   519  0256  120A  118A  2200  120A  118A  	fcall	_setup
   520  025B                     l1122:
   521                           
   522                           ;main.c: 85:     separacion(numero, num);
   523  025B  3037               	movlw	(low (_num| 0))& (0+255)
   524  025C  1283               	bcf	3,5	;RP0=0, select bank0
   525  025D  1303               	bcf	3,6	;RP1=0, select bank0
   526  025E  00B5               	movwf	??_main
   527  025F  0835               	movf	??_main,w
   528  0260  00AF               	movwf	separacion@num
   529  0261  307B               	movlw	123
   530  0262  120A  118A  2023  120A  118A  	fcall	_separacion
   531  0267                     l1124:
   532                           
   533                           ;main.c: 86:     contador = 0;
   534  0267  1283               	bcf	3,5	;RP0=0, select bank0
   535  0268  1303               	bcf	3,6	;RP1=0, select bank0
   536  0269  01B6               	clrf	_contador
   537  026A                     l1126:
   538                           
   539                           ;main.c: 88:         PORTA = contador;
   540  026A  0836               	movf	_contador,w
   541  026B  0085               	movwf	5	;volatile
   542  026C  2A6A               	goto	l1126
   543  026D  120A  118A  280E   	ljmp	start
   544  0270                     __end_of_main:
   545                           
   546                           	psect	text1
   547  0200                     __ptext1:	
   548 ;; *************** function _setup *****************
   549 ;; Defined at:
   550 ;;		line 10 in file "setup.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; Hardware stack levels required when called: 3
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578  0200                     _setup:	
   579                           ;psect for function _setup
   580                           
   581  0200                     l1044:	
   582                           ;incstack = 0
   583                           ; Regs used in _setup: [wreg+status,2+status,0]
   584                           
   585                           
   586                           ;setup.c: 12:     ANSEL = 0;
   587  0200  1683               	bsf	3,5	;RP0=1, select bank3
   588  0201  1703               	bsf	3,6	;RP1=1, select bank3
   589  0202  0188               	clrf	8	;volatile
   590                           
   591                           ;setup.c: 13:     ANSELH = 0;
   592  0203  0189               	clrf	9	;volatile
   593                           
   594                           ;setup.c: 14:     TRISA = 0x00;
   595  0204  1683               	bsf	3,5	;RP0=1, select bank1
   596  0205  1303               	bcf	3,6	;RP1=0, select bank1
   597  0206  0185               	clrf	5	;volatile
   598  0207                     l1046:
   599                           
   600                           ;setup.c: 15:     TRISB = 0x03;
   601  0207  3003               	movlw	3
   602  0208  0086               	movwf	6	;volatile
   603  0209                     l1048:
   604                           
   605                           ;setup.c: 16:     TRISC = 0x00;
   606  0209  0187               	clrf	7	;volatile
   607  020A                     l1050:
   608                           
   609                           ;setup.c: 17:     TRISD = 0x00;
   610  020A  0188               	clrf	8	;volatile
   611  020B                     l1052:
   612                           
   613                           ;setup.c: 18:     PORTA = 0x00;
   614  020B  1283               	bcf	3,5	;RP0=0, select bank0
   615  020C  1303               	bcf	3,6	;RP1=0, select bank0
   616  020D  0185               	clrf	5	;volatile
   617  020E                     l1054:
   618                           
   619                           ;setup.c: 19:     PORTB = 0x00;
   620  020E  0186               	clrf	6	;volatile
   621  020F                     l1056:
   622                           
   623                           ;setup.c: 20:     PORTC = 0x00;
   624  020F  0187               	clrf	7	;volatile
   625  0210                     l1058:
   626                           
   627                           ;setup.c: 21:     PORTD = 0x00;
   628  0210  0188               	clrf	8	;volatile
   629  0211                     l1060:
   630                           
   631                           ;setup.c: 24:     INTCONbits.GIE = 1;
   632  0211  178B               	bsf	11,7	;volatile
   633  0212                     l1062:
   634                           
   635                           ;setup.c: 25:     INTCONbits.T0IE = 1;
   636  0212  168B               	bsf	11,5	;volatile
   637  0213                     l1064:
   638                           
   639                           ;setup.c: 26:     INTCONbits.RBIE = 1;
   640  0213  158B               	bsf	11,3	;volatile
   641  0214                     l1066:
   642                           
   643                           ;setup.c: 27:     INTCONbits.T0IF = 0;
   644  0214  110B               	bcf	11,2	;volatile
   645  0215                     l1068:
   646                           
   647                           ;setup.c: 28:     INTCONbits.RBIF = 0;
   648  0215  100B               	bcf	11,0	;volatile
   649  0216                     l1070:
   650                           
   651                           ;setup.c: 31:     IOCBbits.IOCB0 = 1;
   652  0216  1683               	bsf	3,5	;RP0=1, select bank1
   653  0217  1303               	bcf	3,6	;RP1=0, select bank1
   654  0218  1416               	bsf	22,0	;volatile
   655  0219                     l1072:
   656                           
   657                           ;setup.c: 32:     IOCBbits.IOCB1 = 1;
   658  0219  1496               	bsf	22,1	;volatile
   659  021A                     l1074:
   660                           
   661                           ;setup.c: 33:     OPTION_REGbits.nRBPU = 0;
   662  021A  1381               	bcf	1,7	;volatile
   663  021B                     l1076:
   664                           
   665                           ;setup.c: 34:     WPUBbits.WPUB0 = 1;
   666  021B  1415               	bsf	21,0	;volatile
   667  021C                     l1078:
   668                           
   669                           ;setup.c: 35:     WPUBbits.WPUB1 = 1;
   670  021C  1495               	bsf	21,1	;volatile
   671  021D                     l1080:
   672                           
   673                           ;setup.c: 38:     OPTION_REGbits.T0CS = 0;
   674  021D  1281               	bcf	1,5	;volatile
   675  021E                     l1082:
   676                           
   677                           ;setup.c: 39:     OPTION_REGbits.PSA = 0;
   678  021E  1181               	bcf	1,3	;volatile
   679  021F                     l1084:
   680                           
   681                           ;setup.c: 40:     OPTION_REGbits.PS = 0b110;
   682  021F  0801               	movf	1,w	;volatile
   683  0220  39F8               	andlw	-8
   684  0221  3806               	iorlw	6
   685  0222  0081               	movwf	1	;volatile
   686  0223                     l1086:
   687                           
   688                           ;setup.c: 56:     TMR0 = 254;
   689  0223  30FE               	movlw	254
   690  0224  1283               	bcf	3,5	;RP0=0, select bank0
   691  0225  1303               	bcf	3,6	;RP1=0, select bank0
   692  0226  0081               	movwf	1	;volatile
   693  0227                     l1088:
   694                           
   695                           ;setup.c: 59:     OSCCONbits.IRCF = 0b011;
   696  0227  1683               	bsf	3,5	;RP0=1, select bank1
   697  0228  1303               	bcf	3,6	;RP1=0, select bank1
   698  0229  080F               	movf	15,w	;volatile
   699  022A  398F               	andlw	-113
   700  022B  3830               	iorlw	48
   701  022C  008F               	movwf	15	;volatile
   702  022D                     l1090:
   703                           
   704                           ;setup.c: 60:     OSCCONbits.SCS = 1;
   705  022D  140F               	bsf	15,0	;volatile
   706  022E                     l112:
   707  022E  0008               	return
   708  022F                     __end_of_setup:
   709                           
   710                           	psect	text2
   711  0023                     __ptext2:	
   712 ;; *************** function _separacion *****************
   713 ;; Defined at:
   714 ;;		line 97 in file "main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  a               1    wreg     unsigned char 
   717 ;;  num             1   15[BANK0 ] PTR int 
   718 ;;		 -> num(6), 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  a               1   20[BANK0 ] unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       1       0       0       0
   731 ;;      Locals:         0       1       0       0       0
   732 ;;      Temps:          0       4       0       0       0
   733 ;;      Totals:         0       6       0       0       0
   734 ;;Total ram usage:        6 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; Hardware stack levels required when called: 4
   737 ;; This function calls:
   738 ;;		___awdiv
   739 ;;		___wmul
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745  0023                     _separacion:	
   746                           ;psect for function _separacion
   747                           
   748                           
   749                           ;incstack = 0
   750                           ; Regs used in _separacion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   751                           ;separacion@a stored from wreg
   752  0023  1283               	bcf	3,5	;RP0=0, select bank0
   753  0024  1303               	bcf	3,6	;RP1=0, select bank0
   754  0025  00B4               	movwf	separacion@a
   755  0026                     l1092:
   756                           
   757                           ;main.c: 98:     num[1] = a/100;
   758  0026  3064               	movlw	100
   759  0027  00A6               	movwf	___awdiv@divisor
   760  0028  3000               	movlw	0
   761  0029  00A7               	movwf	___awdiv@divisor+1
   762  002A  0834               	movf	separacion@a,w
   763  002B  00B0               	movwf	??_separacion
   764  002C  01B1               	clrf	??_separacion+1
   765  002D  0830               	movf	??_separacion,w
   766  002E  00A8               	movwf	___awdiv@dividend
   767  002F  0831               	movf	??_separacion+1,w
   768  0030  00A9               	movwf	___awdiv@dividend+1
   769  0031  120A  118A  20AF  120A  118A  	fcall	___awdiv
   770  0036  1283               	bcf	3,5	;RP0=0, select bank0
   771  0037  1303               	bcf	3,6	;RP1=0, select bank0
   772  0038  082F               	movf	separacion@num,w
   773  0039  3E02               	addlw	2
   774  003A  0084               	movwf	4
   775  003B  0826               	movf	?___awdiv,w
   776  003C  1383               	bcf	3,7	;select IRP bank0
   777  003D  0080               	movwf	0
   778  003E  0A84               	incf	4,f
   779  003F  0827               	movf	?___awdiv+1,w
   780  0040  0080               	movwf	0
   781                           
   782                           ;main.c: 99:     num[2] = (a-(100*(num[1])))/10;
   783  0041  300A               	movlw	10
   784  0042  00A6               	movwf	___awdiv@divisor
   785  0043  3000               	movlw	0
   786  0044  00A7               	movwf	___awdiv@divisor+1
   787  0045  082F               	movf	separacion@num,w
   788  0046  3E02               	addlw	2
   789  0047  0084               	movwf	4
   790  0048  0800               	movf	0,w
   791  0049  00A0               	movwf	___wmul@multiplier
   792  004A  0A84               	incf	4,f
   793  004B  0800               	movf	0,w
   794  004C  00A1               	movwf	___wmul@multiplier+1
   795  004D  309C               	movlw	156
   796  004E  00A2               	movwf	___wmul@multiplicand
   797  004F  30FF               	movlw	255
   798  0050  00A3               	movwf	___wmul@multiplicand+1
   799  0051  120A  118A  222F  120A  118A  	fcall	___wmul
   800  0056  1283               	bcf	3,5	;RP0=0, select bank0
   801  0057  1303               	bcf	3,6	;RP1=0, select bank0
   802  0058  0834               	movf	separacion@a,w
   803  0059  0720               	addwf	?___wmul,w
   804  005A  00A8               	movwf	___awdiv@dividend
   805  005B  0821               	movf	?___wmul+1,w
   806  005C  1803               	skipnc
   807  005D  0A21               	incf	?___wmul+1,w
   808  005E  00A9               	movwf	___awdiv@dividend+1
   809  005F  120A  118A  20AF  120A  118A  	fcall	___awdiv
   810  0064  1283               	bcf	3,5	;RP0=0, select bank0
   811  0065  1303               	bcf	3,6	;RP1=0, select bank0
   812  0066  082F               	movf	separacion@num,w
   813  0067  3E04               	addlw	4
   814  0068  0084               	movwf	4
   815  0069  0826               	movf	?___awdiv,w
   816  006A  1383               	bcf	3,7	;select IRP bank0
   817  006B  0080               	movwf	0
   818  006C  0A84               	incf	4,f
   819  006D  0827               	movf	?___awdiv+1,w
   820  006E  0080               	movwf	0
   821                           
   822                           ;main.c: 100:     num[3] = (a-(100*(num[1])+10*(num[2])));
   823  006F  082F               	movf	separacion@num,w
   824  0070  3E02               	addlw	2
   825  0071  0084               	movwf	4
   826  0072  0800               	movf	0,w
   827  0073  00A0               	movwf	___wmul@multiplier
   828  0074  0A84               	incf	4,f
   829  0075  0800               	movf	0,w
   830  0076  00A1               	movwf	___wmul@multiplier+1
   831  0077  309C               	movlw	156
   832  0078  00A2               	movwf	___wmul@multiplicand
   833  0079  30FF               	movlw	255
   834  007A  00A3               	movwf	___wmul@multiplicand+1
   835  007B  120A  118A  222F  120A  118A  	fcall	___wmul
   836  0080  1283               	bcf	3,5	;RP0=0, select bank0
   837  0081  1303               	bcf	3,6	;RP1=0, select bank0
   838  0082  0834               	movf	separacion@a,w
   839  0083  0720               	addwf	?___wmul,w
   840  0084  00B0               	movwf	??_separacion
   841  0085  0821               	movf	?___wmul+1,w
   842  0086  1803               	skipnc
   843  0087  0A21               	incf	?___wmul+1,w
   844  0088  00B1               	movwf	??_separacion+1
   845  0089  082F               	movf	separacion@num,w
   846  008A  3E04               	addlw	4
   847  008B  0084               	movwf	4
   848  008C  1383               	bcf	3,7	;select IRP bank0
   849  008D  0800               	movf	0,w
   850  008E  00A0               	movwf	___wmul@multiplier
   851  008F  0A84               	incf	4,f
   852  0090  0800               	movf	0,w
   853  0091  00A1               	movwf	___wmul@multiplier+1
   854  0092  30F6               	movlw	246
   855  0093  00A2               	movwf	___wmul@multiplicand
   856  0094  30FF               	movlw	255
   857  0095  00A3               	movwf	___wmul@multiplicand+1
   858  0096  120A  118A  222F  120A  118A  	fcall	___wmul
   859  009B  1283               	bcf	3,5	;RP0=0, select bank0
   860  009C  1303               	bcf	3,6	;RP1=0, select bank0
   861  009D  0820               	movf	?___wmul,w
   862  009E  0730               	addwf	??_separacion,w
   863  009F  00B2               	movwf	??_separacion+2
   864  00A0  0821               	movf	?___wmul+1,w
   865  00A1  1803               	skipnc
   866  00A2  0A21               	incf	?___wmul+1,w
   867  00A3  0731               	addwf	??_separacion+1,w
   868  00A4  00B3               	movwf	??_separacion+3
   869  00A5  082F               	movf	separacion@num,w
   870  00A6  3E06               	addlw	6
   871  00A7  0084               	movwf	4
   872  00A8  0832               	movf	??_separacion+2,w
   873  00A9  1383               	bcf	3,7	;select IRP bank0
   874  00AA  0080               	movwf	0
   875  00AB  0A84               	incf	4,f
   876  00AC  0833               	movf	??_separacion+3,w
   877  00AD  0080               	movwf	0
   878  00AE                     l53:
   879  00AE  0008               	return
   880  00AF                     __end_of_separacion:
   881                           
   882                           	psect	text3
   883  022F                     __ptext3:	
   884 ;; *************** function ___wmul *****************
   885 ;; Defined at:
   886 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  multiplier      2    0[BANK0 ] unsigned int 
   889 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  product         2    4[BANK0 ] unsigned int 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  2    0[BANK0 ] unsigned int 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       4       0       0       0
   902 ;;      Locals:         0       2       0       0       0
   903 ;;      Temps:          0       0       0       0       0
   904 ;;      Totals:         0       6       0       0       0
   905 ;;Total ram usage:        6 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 3
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_separacion
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915  022F                     ___wmul:	
   916                           ;psect for function ___wmul
   917                           
   918  022F                     l970:	
   919                           ;incstack = 0
   920                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   921                           
   922  022F  1283               	bcf	3,5	;RP0=0, select bank0
   923  0230  1303               	bcf	3,6	;RP1=0, select bank0
   924  0231  01A4               	clrf	___wmul@product
   925  0232  01A5               	clrf	___wmul@product+1
   926  0233                     l972:
   927  0233  1C20               	btfss	___wmul@multiplier,0
   928  0234  2A36               	goto	u201
   929  0235  2A37               	goto	u200
   930  0236                     u201:
   931  0236  2A3D               	goto	l198
   932  0237                     u200:
   933  0237                     l974:
   934  0237  0822               	movf	___wmul@multiplicand,w
   935  0238  07A4               	addwf	___wmul@product,f
   936  0239  1803               	skipnc
   937  023A  0AA5               	incf	___wmul@product+1,f
   938  023B  0823               	movf	___wmul@multiplicand+1,w
   939  023C  07A5               	addwf	___wmul@product+1,f
   940  023D                     l198:
   941  023D  3001               	movlw	1
   942  023E                     u215:
   943  023E  1003               	clrc
   944  023F  0DA2               	rlf	___wmul@multiplicand,f
   945  0240  0DA3               	rlf	___wmul@multiplicand+1,f
   946  0241  3EFF               	addlw	-1
   947  0242  1D03               	skipz
   948  0243  2A3E               	goto	u215
   949  0244                     l976:
   950  0244  3001               	movlw	1
   951  0245                     u225:
   952  0245  1003               	clrc
   953  0246  0CA1               	rrf	___wmul@multiplier+1,f
   954  0247  0CA0               	rrf	___wmul@multiplier,f
   955  0248  3EFF               	addlw	-1
   956  0249  1D03               	skipz
   957  024A  2A45               	goto	u225
   958  024B                     l978:
   959  024B  0820               	movf	___wmul@multiplier,w
   960  024C  0421               	iorwf	___wmul@multiplier+1,w
   961  024D  1D03               	btfss	3,2
   962  024E  2A50               	goto	u231
   963  024F  2A51               	goto	u230
   964  0250                     u231:
   965  0250  2A33               	goto	l972
   966  0251                     u230:
   967  0251                     l980:
   968  0251  0825               	movf	___wmul@product+1,w
   969  0252  00A1               	movwf	?___wmul+1
   970  0253  0824               	movf	___wmul@product,w
   971  0254  00A0               	movwf	?___wmul
   972  0255                     l200:
   973  0255  0008               	return
   974  0256                     __end_of___wmul:
   975                           
   976                           	psect	text4
   977  00AF                     __ptext4:	
   978 ;; *************** function ___awdiv *****************
   979 ;; Defined at:
   980 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  divisor         2    6[BANK0 ] int 
   983 ;;  dividend        2    8[BANK0 ] int 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  quotient        2   13[BANK0 ] int 
   986 ;;  sign            1   12[BANK0 ] unsigned char 
   987 ;;  counter         1   11[BANK0 ] unsigned char 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  2    6[BANK0 ] int 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       4       0       0       0
   998 ;;      Locals:         0       4       0       0       0
   999 ;;      Temps:          0       1       0       0       0
  1000 ;;      Totals:         0       9       0       0       0
  1001 ;;Total ram usage:        9 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 3
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_separacion
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011  00AF                     ___awdiv:	
  1012                           ;psect for function ___awdiv
  1013                           
  1014  00AF                     l984:	
  1015                           ;incstack = 0
  1016                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1017                           
  1018  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1019  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1020  00B1  01AC               	clrf	___awdiv@sign
  1021  00B2                     l986:
  1022  00B2  1FA7               	btfss	___awdiv@divisor+1,7
  1023  00B3  28B5               	goto	u241
  1024  00B4  28B6               	goto	u240
  1025  00B5                     u241:
  1026  00B5  28BD               	goto	l992
  1027  00B6                     u240:
  1028  00B6                     l988:
  1029  00B6  09A6               	comf	___awdiv@divisor,f
  1030  00B7  09A7               	comf	___awdiv@divisor+1,f
  1031  00B8  0AA6               	incf	___awdiv@divisor,f
  1032  00B9  1903               	skipnz
  1033  00BA  0AA7               	incf	___awdiv@divisor+1,f
  1034  00BB                     l990:
  1035  00BB  01AC               	clrf	___awdiv@sign
  1036  00BC  0AAC               	incf	___awdiv@sign,f
  1037  00BD                     l992:
  1038  00BD  1FA9               	btfss	___awdiv@dividend+1,7
  1039  00BE  28C0               	goto	u251
  1040  00BF  28C1               	goto	u250
  1041  00C0                     u251:
  1042  00C0  28CA               	goto	l998
  1043  00C1                     u250:
  1044  00C1                     l994:
  1045  00C1  09A8               	comf	___awdiv@dividend,f
  1046  00C2  09A9               	comf	___awdiv@dividend+1,f
  1047  00C3  0AA8               	incf	___awdiv@dividend,f
  1048  00C4  1903               	skipnz
  1049  00C5  0AA9               	incf	___awdiv@dividend+1,f
  1050  00C6                     l996:
  1051  00C6  3001               	movlw	1
  1052  00C7  00AA               	movwf	??___awdiv
  1053  00C8  082A               	movf	??___awdiv,w
  1054  00C9  06AC               	xorwf	___awdiv@sign,f
  1055  00CA                     l998:
  1056  00CA  01AD               	clrf	___awdiv@quotient
  1057  00CB  01AE               	clrf	___awdiv@quotient+1
  1058  00CC                     l1000:
  1059  00CC  0826               	movf	___awdiv@divisor,w
  1060  00CD  0427               	iorwf	___awdiv@divisor+1,w
  1061  00CE  1903               	btfsc	3,2
  1062  00CF  28D1               	goto	u261
  1063  00D0  28D2               	goto	u260
  1064  00D1                     u261:
  1065  00D1  2909               	goto	l1020
  1066  00D2                     u260:
  1067  00D2                     l1002:
  1068  00D2  01AB               	clrf	___awdiv@counter
  1069  00D3  0AAB               	incf	___awdiv@counter,f
  1070  00D4  28E0               	goto	l1008
  1071  00D5                     l1004:
  1072  00D5  3001               	movlw	1
  1073  00D6                     u275:
  1074  00D6  1003               	clrc
  1075  00D7  0DA6               	rlf	___awdiv@divisor,f
  1076  00D8  0DA7               	rlf	___awdiv@divisor+1,f
  1077  00D9  3EFF               	addlw	-1
  1078  00DA  1D03               	skipz
  1079  00DB  28D6               	goto	u275
  1080  00DC                     l1006:
  1081  00DC  3001               	movlw	1
  1082  00DD  00AA               	movwf	??___awdiv
  1083  00DE  082A               	movf	??___awdiv,w
  1084  00DF  07AB               	addwf	___awdiv@counter,f
  1085  00E0                     l1008:
  1086  00E0  1FA7               	btfss	___awdiv@divisor+1,7
  1087  00E1  28E3               	goto	u281
  1088  00E2  28E4               	goto	u280
  1089  00E3                     u281:
  1090  00E3  28D5               	goto	l1004
  1091  00E4                     u280:
  1092  00E4                     l1010:
  1093  00E4  3001               	movlw	1
  1094  00E5                     u295:
  1095  00E5  1003               	clrc
  1096  00E6  0DAD               	rlf	___awdiv@quotient,f
  1097  00E7  0DAE               	rlf	___awdiv@quotient+1,f
  1098  00E8  3EFF               	addlw	-1
  1099  00E9  1D03               	skipz
  1100  00EA  28E5               	goto	u295
  1101  00EB  0827               	movf	___awdiv@divisor+1,w
  1102  00EC  0229               	subwf	___awdiv@dividend+1,w
  1103  00ED  1D03               	skipz
  1104  00EE  28F1               	goto	u305
  1105  00EF  0826               	movf	___awdiv@divisor,w
  1106  00F0  0228               	subwf	___awdiv@dividend,w
  1107  00F1                     u305:
  1108  00F1  1C03               	skipc
  1109  00F2  28F4               	goto	u301
  1110  00F3  28F5               	goto	u300
  1111  00F4                     u301:
  1112  00F4  28FC               	goto	l1016
  1113  00F5                     u300:
  1114  00F5                     l1012:
  1115  00F5  0826               	movf	___awdiv@divisor,w
  1116  00F6  02A8               	subwf	___awdiv@dividend,f
  1117  00F7  0827               	movf	___awdiv@divisor+1,w
  1118  00F8  1C03               	skipc
  1119  00F9  03A9               	decf	___awdiv@dividend+1,f
  1120  00FA  02A9               	subwf	___awdiv@dividend+1,f
  1121  00FB                     l1014:
  1122  00FB  142D               	bsf	___awdiv@quotient,0
  1123  00FC                     l1016:
  1124  00FC  3001               	movlw	1
  1125  00FD                     u315:
  1126  00FD  1003               	clrc
  1127  00FE  0CA7               	rrf	___awdiv@divisor+1,f
  1128  00FF  0CA6               	rrf	___awdiv@divisor,f
  1129  0100  3EFF               	addlw	-1
  1130  0101  1D03               	skipz
  1131  0102  28FD               	goto	u315
  1132  0103                     l1018:
  1133  0103  3001               	movlw	1
  1134  0104  02AB               	subwf	___awdiv@counter,f
  1135  0105  1D03               	btfss	3,2
  1136  0106  2908               	goto	u321
  1137  0107  2909               	goto	u320
  1138  0108                     u321:
  1139  0108  28E4               	goto	l1010
  1140  0109                     u320:
  1141  0109                     l1020:
  1142  0109  082C               	movf	___awdiv@sign,w
  1143  010A  1903               	btfsc	3,2
  1144  010B  290D               	goto	u331
  1145  010C  290E               	goto	u330
  1146  010D                     u331:
  1147  010D  2913               	goto	l1024
  1148  010E                     u330:
  1149  010E                     l1022:
  1150  010E  09AD               	comf	___awdiv@quotient,f
  1151  010F  09AE               	comf	___awdiv@quotient+1,f
  1152  0110  0AAD               	incf	___awdiv@quotient,f
  1153  0111  1903               	skipnz
  1154  0112  0AAE               	incf	___awdiv@quotient+1,f
  1155  0113                     l1024:
  1156  0113  082E               	movf	___awdiv@quotient+1,w
  1157  0114  00A7               	movwf	?___awdiv+1
  1158  0115  082D               	movf	___awdiv@quotient,w
  1159  0116  00A6               	movwf	?___awdiv
  1160  0117                     l351:
  1161  0117  0008               	return
  1162  0118                     __end_of___awdiv:
  1163                           
  1164                           	psect	text5
  1165  01C6                     __ptext5:	
  1166 ;; *************** function _isr *****************
  1167 ;; Defined at:
  1168 ;;		line 57 in file "main.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0
  1184 ;;      Temps:          4       0       0       0       0
  1185 ;;      Totals:         4       0       0       0       0
  1186 ;;Total ram usage:        4 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 2
  1189 ;; This function calls:
  1190 ;;		_mostrar
  1191 ;; This function is called by:
  1192 ;;		Interrupt level 1
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196  01C6                     _isr:	
  1197                           ;psect for function _isr
  1198                           
  1199  01C6                     i1l1096:
  1200                           
  1201                           ;main.c: 58:     if(INTCONbits.RBIF){
  1202  01C6  1C0B               	btfss	11,0	;volatile
  1203  01C7  29C9               	goto	u34_21
  1204  01C8  29CA               	goto	u34_20
  1205  01C9                     u34_21:
  1206  01C9  29DD               	goto	i1l35
  1207  01CA                     u34_20:
  1208  01CA                     i1l1098:
  1209                           
  1210                           ;main.c: 59:         if(!PORTBbits.RB0){
  1211  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1212  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1213  01CC  1806               	btfsc	6,0	;volatile
  1214  01CD  29CF               	goto	u35_21
  1215  01CE  29D0               	goto	u35_20
  1216  01CF                     u35_21:
  1217  01CF  29D5               	goto	i1l36
  1218  01D0                     u35_20:
  1219  01D0                     i1l1100:
  1220                           
  1221                           ;main.c: 61:             contador++;
  1222  01D0  3001               	movlw	1
  1223  01D1  00F7               	movwf	??_isr
  1224  01D2  0877               	movf	??_isr,w
  1225  01D3  07B6               	addwf	_contador,f
  1226                           
  1227                           ;main.c: 62:         } else if(!PORTBbits.RB1){
  1228  01D4  29DB               	goto	i1l1104
  1229  01D5                     i1l36:
  1230  01D5  1886               	btfsc	6,1	;volatile
  1231  01D6  29D8               	goto	u36_21
  1232  01D7  29D9               	goto	u36_20
  1233  01D8                     u36_21:
  1234  01D8  29DB               	goto	i1l1104
  1235  01D9                     u36_20:
  1236  01D9                     i1l1102:
  1237                           
  1238                           ;main.c: 64:             contador--;
  1239  01D9  3001               	movlw	1
  1240  01DA  02B6               	subwf	_contador,f
  1241  01DB                     i1l1104:
  1242                           
  1243                           ;main.c: 66:         INTCONbits.RBIF = 0;
  1244  01DB  100B               	bcf	11,0	;volatile
  1245                           
  1246                           ;main.c: 67:     }
  1247  01DC  29F7               	goto	i1l42
  1248  01DD                     i1l35:	
  1249                           ;main.c: 68:     else if(INTCONbits.T0IF){
  1250                           
  1251  01DD  1D0B               	btfss	11,2	;volatile
  1252  01DE  29E0               	goto	u37_21
  1253  01DF  29E1               	goto	u37_20
  1254  01E0                     u37_21:
  1255  01E0  29F7               	goto	i1l42
  1256  01E1                     u37_20:
  1257  01E1                     i1l1106:
  1258                           
  1259                           ;main.c: 69:         mostrar(num);
  1260  01E1  3037               	movlw	(low (_num| 0))& (0+255)
  1261  01E2  120A  118A  2173  120A  118A  	fcall	_mostrar
  1262  01E7                     i1l1108:
  1263                           
  1264                           ;main.c: 70:         Bandera_multiplexado++;
  1265  01E7  3001               	movlw	1
  1266  01E8  00F7               	movwf	??_isr
  1267  01E9  0877               	movf	??_isr,w
  1268  01EA  07FB               	addwf	_Bandera_multiplexado,f
  1269  01EB                     i1l1110:
  1270                           
  1271                           ;main.c: 71:         if(Bandera_multiplexado>2){
  1272  01EB  3003               	movlw	3
  1273  01EC  027B               	subwf	_Bandera_multiplexado,w
  1274  01ED  1C03               	skipc
  1275  01EE  29F0               	goto	u38_21
  1276  01EF  29F1               	goto	u38_20
  1277  01F0                     u38_21:
  1278  01F0  29F2               	goto	i1l1114
  1279  01F1                     u38_20:
  1280  01F1                     i1l1112:
  1281                           
  1282                           ;main.c: 72:             Bandera_multiplexado = 0;
  1283  01F1  01FB               	clrf	_Bandera_multiplexado
  1284  01F2                     i1l1114:
  1285                           
  1286                           ;main.c: 74:         INTCONbits.T0IF = 0;
  1287  01F2  110B               	bcf	11,2	;volatile
  1288  01F3                     i1l1116:
  1289                           
  1290                           ;main.c: 75:         TMR0 = 254;
  1291  01F3  30FE               	movlw	254
  1292  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1293  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1294  01F6  0081               	movwf	1	;volatile
  1295  01F7                     i1l42:
  1296  01F7  087A               	movf	??_isr+3,w
  1297  01F8  008A               	movwf	10
  1298  01F9  0879               	movf	??_isr+2,w
  1299  01FA  0084               	movwf	4
  1300  01FB  0E78               	swapf	??_isr+1,w
  1301  01FC  0083               	movwf	3
  1302  01FD  0EFE               	swapf	btemp,f
  1303  01FE  0E7E               	swapf	btemp,w
  1304  01FF  0009               	retfie
  1305  0200                     __end_of_isr:
  1306                           
  1307                           	psect	intentry
  1308  0004                     __pintentry:	
  1309                           ;incstack = 0
  1310                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1311                           
  1312  0004                     interrupt_function:
  1313  007E                     saved_w	set	btemp
  1314  0004  00FE               	movwf	btemp
  1315  0005  0E03               	swapf	3,w
  1316  0006  00F8               	movwf	??_isr+1
  1317  0007  0804               	movf	4,w
  1318  0008  00F9               	movwf	??_isr+2
  1319  0009  080A               	movf	10,w
  1320  000A  00FA               	movwf	??_isr+3
  1321  000B  120A  118A  29C6   	ljmp	_isr
  1322                           
  1323                           	psect	text6
  1324  0173                     __ptext6:	
  1325 ;; *************** function _mostrar *****************
  1326 ;; Defined at:
  1327 ;;		line 105 in file "main.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  num             1    wreg     PTR int 
  1330 ;;		 -> num(6), 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  num             1    6[COMMON] PTR int 
  1333 ;;		 -> num(6), 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         0       0       0       0       0
  1344 ;;      Locals:         1       0       0       0       0
  1345 ;;      Temps:          2       0       0       0       0
  1346 ;;      Totals:         3       0       0       0       0
  1347 ;;Total ram usage:        3 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; Hardware stack levels required when called: 1
  1350 ;; This function calls:
  1351 ;;		_tabla
  1352 ;; This function is called by:
  1353 ;;		_isr
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357  0173                     _mostrar:	
  1358                           ;psect for function _mostrar
  1359                           
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in _mostrar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1363                           ;mostrar@num stored from wreg
  1364  0173  00F6               	movwf	mostrar@num
  1365  0174                     i1l1028:
  1366                           
  1367                           ;main.c: 106:     PORTD = 0x00;
  1368  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0176  0188               	clrf	8	;volatile
  1371                           
  1372                           ;main.c: 107:     PORTC = 0x00;
  1373  0177  0187               	clrf	7	;volatile
  1374                           
  1375                           ;main.c: 108:     switch(Bandera_multiplexado){
  1376  0178  29B2               	goto	i1l1038
  1377  0179                     i1l57:	
  1378                           ;main.c: 109:         case 0:
  1379                           
  1380                           
  1381                           ;main.c: 110:             PORTDbits.RD2 = 1;
  1382  0179  1508               	bsf	8,2	;volatile
  1383  017A                     i1l1030:
  1384                           
  1385                           ;main.c: 111:             PORTC = tabla(num[1]);
  1386  017A  0876               	movf	mostrar@num,w
  1387  017B  3E02               	addlw	2
  1388  017C  0084               	movwf	4
  1389  017D  1383               	bcf	3,7	;select IRP bank0
  1390  017E  0800               	movf	0,w
  1391  017F  00F0               	movwf	tabla@numero
  1392  0180  0A84               	incf	4,f
  1393  0181  0800               	movf	0,w
  1394  0182  00F1               	movwf	tabla@numero+1
  1395  0183  120A  118A  2118  120A  118A  	fcall	_tabla
  1396  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1398  018A  0087               	movwf	7	;volatile
  1399                           
  1400                           ;main.c: 112:             break;
  1401  018B  29C5               	goto	i1l62
  1402  018C                     i1l59:	
  1403                           ;main.c: 113:         case 1:
  1404                           
  1405                           
  1406                           ;main.c: 114:             PORTDbits.RD1 = 1;
  1407  018C  1488               	bsf	8,1	;volatile
  1408  018D                     i1l1032:
  1409                           
  1410                           ;main.c: 115:             PORTC = tabla(num[2]);
  1411  018D  0876               	movf	mostrar@num,w
  1412  018E  3E04               	addlw	4
  1413  018F  0084               	movwf	4
  1414  0190  1383               	bcf	3,7	;select IRP bank0
  1415  0191  0800               	movf	0,w
  1416  0192  00F0               	movwf	tabla@numero
  1417  0193  0A84               	incf	4,f
  1418  0194  0800               	movf	0,w
  1419  0195  00F1               	movwf	tabla@numero+1
  1420  0196  120A  118A  2118  120A  118A  	fcall	_tabla
  1421  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1422  019C  1303               	bcf	3,6	;RP1=0, select bank0
  1423  019D  0087               	movwf	7	;volatile
  1424                           
  1425                           ;main.c: 116:             break;
  1426  019E  29C5               	goto	i1l62
  1427  019F                     i1l60:	
  1428                           ;main.c: 117:         case 2:
  1429                           
  1430                           
  1431                           ;main.c: 118:             PORTDbits.RD0 = 1;
  1432  019F  1408               	bsf	8,0	;volatile
  1433  01A0                     i1l1034:
  1434                           
  1435                           ;main.c: 119:             PORTC = tabla(num[3]);
  1436  01A0  0876               	movf	mostrar@num,w
  1437  01A1  3E06               	addlw	6
  1438  01A2  0084               	movwf	4
  1439  01A3  1383               	bcf	3,7	;select IRP bank0
  1440  01A4  0800               	movf	0,w
  1441  01A5  00F0               	movwf	tabla@numero
  1442  01A6  0A84               	incf	4,f
  1443  01A7  0800               	movf	0,w
  1444  01A8  00F1               	movwf	tabla@numero+1
  1445  01A9  120A  118A  2118  120A  118A  	fcall	_tabla
  1446  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1447  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1448  01B0  0087               	movwf	7	;volatile
  1449                           
  1450                           ;main.c: 120:             break;
  1451  01B1  29C5               	goto	i1l62
  1452  01B2                     i1l1038:
  1453  01B2  087B               	movf	_Bandera_multiplexado,w
  1454  01B3  00F4               	movwf	??_mostrar
  1455  01B4  01F5               	clrf	??_mostrar+1
  1456                           
  1457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1458                           ; Switch size 1, requested type "simple"
  1459                           ; Number of cases is 1, Range of values is 0 to 0
  1460                           ; switch strategies available:
  1461                           ; Name         Instructions Cycles
  1462                           ; simple_byte            4     3 (average)
  1463                           ; direct_byte           11     8 (fixed)
  1464                           ; jumptable            260     6 (fixed)
  1465                           ;	Chosen strategy is simple_byte
  1466  01B5  0875               	movf	??_mostrar+1,w
  1467  01B6  3A00               	xorlw	0	; case 0
  1468  01B7  1903               	skipnz
  1469  01B8  29BA               	goto	i1l1168
  1470  01B9  29C5               	goto	i1l62
  1471  01BA                     i1l1168:
  1472                           
  1473                           ; Switch size 1, requested type "simple"
  1474                           ; Number of cases is 3, Range of values is 0 to 2
  1475                           ; switch strategies available:
  1476                           ; Name         Instructions Cycles
  1477                           ; simple_byte           10     6 (average)
  1478                           ; direct_byte           17     8 (fixed)
  1479                           ; jumptable            260     6 (fixed)
  1480                           ;	Chosen strategy is simple_byte
  1481  01BA  0874               	movf	??_mostrar,w
  1482  01BB  3A00               	xorlw	0	; case 0
  1483  01BC  1903               	skipnz
  1484  01BD  2979               	goto	i1l57
  1485  01BE  3A01               	xorlw	1	; case 1
  1486  01BF  1903               	skipnz
  1487  01C0  298C               	goto	i1l59
  1488  01C1  3A03               	xorlw	3	; case 2
  1489  01C2  1903               	skipnz
  1490  01C3  299F               	goto	i1l60
  1491  01C4  29C5               	goto	i1l62
  1492  01C5                     i1l62:
  1493  01C5  0008               	return
  1494  01C6                     __end_of_mostrar:
  1495                           
  1496                           	psect	text7
  1497  0118                     __ptext7:	
  1498 ;; *************** function _tabla *****************
  1499 ;; Defined at:
  1500 ;;		line 128 in file "main.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  numero          2    0[COMMON] int 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  valor           1    3[COMMON] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      unsigned char 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1514 ;;      Params:         2       0       0       0       0
  1515 ;;      Locals:         1       0       0       0       0
  1516 ;;      Temps:          1       0       0       0       0
  1517 ;;      Totals:         4       0       0       0       0
  1518 ;;Total ram usage:        4 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_mostrar
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527  0118                     _tabla:	
  1528                           ;psect for function _tabla
  1529                           
  1530  0118                     i1l936:	
  1531                           ;incstack = 0
  1532                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1533                           
  1534                           
  1535                           ;main.c: 129:     uint8_t valor = 0;
  1536  0118  01F3               	clrf	tabla@valor
  1537                           
  1538                           ;main.c: 130:     switch(numero){
  1539  0119  294C               	goto	i1l960
  1540  011A                     i1l938:
  1541                           
  1542                           ;main.c: 132:             valor = 0x3F;
  1543  011A  303F               	movlw	63
  1544  011B  00F2               	movwf	??_tabla
  1545  011C  0872               	movf	??_tabla,w
  1546  011D  00F3               	movwf	tabla@valor
  1547                           
  1548                           ;main.c: 133:             break;
  1549  011E  2971               	goto	i1l962
  1550  011F                     i1l940:
  1551                           
  1552                           ;main.c: 135:             valor = 0x06;
  1553  011F  3006               	movlw	6
  1554  0120  00F2               	movwf	??_tabla
  1555  0121  0872               	movf	??_tabla,w
  1556  0122  00F3               	movwf	tabla@valor
  1557                           
  1558                           ;main.c: 136:             break;
  1559  0123  2971               	goto	i1l962
  1560  0124                     i1l942:
  1561                           
  1562                           ;main.c: 138:             valor = 0x5B;
  1563  0124  305B               	movlw	91
  1564  0125  00F2               	movwf	??_tabla
  1565  0126  0872               	movf	??_tabla,w
  1566  0127  00F3               	movwf	tabla@valor
  1567                           
  1568                           ;main.c: 139:             break;
  1569  0128  2971               	goto	i1l962
  1570  0129                     i1l944:
  1571                           
  1572                           ;main.c: 141:             valor = 0x4F;
  1573  0129  304F               	movlw	79
  1574  012A  00F2               	movwf	??_tabla
  1575  012B  0872               	movf	??_tabla,w
  1576  012C  00F3               	movwf	tabla@valor
  1577                           
  1578                           ;main.c: 142:             break;
  1579  012D  2971               	goto	i1l962
  1580  012E                     i1l946:
  1581                           
  1582                           ;main.c: 144:             valor = 0x66;
  1583  012E  3066               	movlw	102
  1584  012F  00F2               	movwf	??_tabla
  1585  0130  0872               	movf	??_tabla,w
  1586  0131  00F3               	movwf	tabla@valor
  1587                           
  1588                           ;main.c: 145:             break;
  1589  0132  2971               	goto	i1l962
  1590  0133                     i1l948:
  1591                           
  1592                           ;main.c: 147:             valor = 0x6D;
  1593  0133  306D               	movlw	109
  1594  0134  00F2               	movwf	??_tabla
  1595  0135  0872               	movf	??_tabla,w
  1596  0136  00F3               	movwf	tabla@valor
  1597                           
  1598                           ;main.c: 148:             break;
  1599  0137  2971               	goto	i1l962
  1600  0138                     i1l950:
  1601                           
  1602                           ;main.c: 150:             valor = 0x7D;
  1603  0138  307D               	movlw	125
  1604  0139  00F2               	movwf	??_tabla
  1605  013A  0872               	movf	??_tabla,w
  1606  013B  00F3               	movwf	tabla@valor
  1607                           
  1608                           ;main.c: 151:             break;
  1609  013C  2971               	goto	i1l962
  1610  013D                     i1l952:
  1611                           
  1612                           ;main.c: 153:             valor = 0x07;
  1613  013D  3007               	movlw	7
  1614  013E  00F2               	movwf	??_tabla
  1615  013F  0872               	movf	??_tabla,w
  1616  0140  00F3               	movwf	tabla@valor
  1617                           
  1618                           ;main.c: 154:             break;
  1619  0141  2971               	goto	i1l962
  1620  0142                     i1l954:
  1621                           
  1622                           ;main.c: 156:             valor = 0x7F;
  1623  0142  307F               	movlw	127
  1624  0143  00F2               	movwf	??_tabla
  1625  0144  0872               	movf	??_tabla,w
  1626  0145  00F3               	movwf	tabla@valor
  1627                           
  1628                           ;main.c: 157:             break;
  1629  0146  2971               	goto	i1l962
  1630  0147                     i1l956:
  1631                           
  1632                           ;main.c: 159:             valor = 0x6F;
  1633  0147  306F               	movlw	111
  1634  0148  00F2               	movwf	??_tabla
  1635  0149  0872               	movf	??_tabla,w
  1636  014A  00F3               	movwf	tabla@valor
  1637                           
  1638                           ;main.c: 160:             break;
  1639  014B  2971               	goto	i1l962
  1640  014C                     i1l960:
  1641                           
  1642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1643                           ; Switch size 1, requested type "simple"
  1644                           ; Number of cases is 1, Range of values is 0 to 0
  1645                           ; switch strategies available:
  1646                           ; Name         Instructions Cycles
  1647                           ; simple_byte            4     3 (average)
  1648                           ; direct_byte           11     8 (fixed)
  1649                           ; jumptable            260     6 (fixed)
  1650                           ;	Chosen strategy is simple_byte
  1651  014C  0871               	movf	tabla@numero+1,w
  1652  014D  3A00               	xorlw	0	; case 0
  1653  014E  1903               	skipnz
  1654  014F  2951               	goto	i1l1170
  1655  0150  2971               	goto	i1l962
  1656  0151                     i1l1170:
  1657                           
  1658                           ; Switch size 1, requested type "simple"
  1659                           ; Number of cases is 10, Range of values is 0 to 9
  1660                           ; switch strategies available:
  1661                           ; Name         Instructions Cycles
  1662                           ; simple_byte           31    16 (average)
  1663                           ; direct_byte           38     8 (fixed)
  1664                           ; jumptable            260     6 (fixed)
  1665                           ;	Chosen strategy is simple_byte
  1666  0151  0870               	movf	tabla@numero,w
  1667  0152  3A00               	xorlw	0	; case 0
  1668  0153  1903               	skipnz
  1669  0154  291A               	goto	i1l938
  1670  0155  3A01               	xorlw	1	; case 1
  1671  0156  1903               	skipnz
  1672  0157  291F               	goto	i1l940
  1673  0158  3A03               	xorlw	3	; case 2
  1674  0159  1903               	skipnz
  1675  015A  2924               	goto	i1l942
  1676  015B  3A01               	xorlw	1	; case 3
  1677  015C  1903               	skipnz
  1678  015D  2929               	goto	i1l944
  1679  015E  3A07               	xorlw	7	; case 4
  1680  015F  1903               	skipnz
  1681  0160  292E               	goto	i1l946
  1682  0161  3A01               	xorlw	1	; case 5
  1683  0162  1903               	skipnz
  1684  0163  2933               	goto	i1l948
  1685  0164  3A03               	xorlw	3	; case 6
  1686  0165  1903               	skipnz
  1687  0166  2938               	goto	i1l950
  1688  0167  3A01               	xorlw	1	; case 7
  1689  0168  1903               	skipnz
  1690  0169  293D               	goto	i1l952
  1691  016A  3A0F               	xorlw	15	; case 8
  1692  016B  1903               	skipnz
  1693  016C  2942               	goto	i1l954
  1694  016D  3A01               	xorlw	1	; case 9
  1695  016E  1903               	skipnz
  1696  016F  2947               	goto	i1l956
  1697  0170  2971               	goto	i1l962
  1698  0171                     i1l962:
  1699                           
  1700                           ;main.c: 162:     return valor;
  1701  0171  0873               	movf	tabla@valor,w
  1702  0172                     i1l77:
  1703  0172  0008               	return
  1704  0173                     __end_of_tabla:
  1705  007E                     btemp	set	126	;btemp
  1706  007E                     wtemp0	set	126
  1707                           
  1708                           	psect	idloc
  1709                           
  1710                           ;Config register IDLOC0 @ 0x2000
  1711                           ;	unspecified, using default values
  1712  2000                     	org	8192
  1713  2000  3FFF               	dw	16383
  1714                           
  1715                           ;Config register IDLOC1 @ 0x2001
  1716                           ;	unspecified, using default values
  1717  2001                     	org	8193
  1718  2001  3FFF               	dw	16383
  1719                           
  1720                           ;Config register IDLOC2 @ 0x2002
  1721                           ;	unspecified, using default values
  1722  2002                     	org	8194
  1723  2002  3FFF               	dw	16383
  1724                           
  1725                           ;Config register IDLOC3 @ 0x2003
  1726                           ;	unspecified, using default values
  1727  2003                     	org	8195
  1728  2003  3FFF               	dw	16383
  1729                           
  1730                           	psect	config
  1731                           
  1732                           ;Config register CONFIG1 @ 0x2007
  1733                           ;	Oscillator Selection bits
  1734                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1735                           ;	Watchdog Timer Enable bit
  1736                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1737                           ;	Power-up Timer Enable bit
  1738                           ;	PWRTE = OFF, PWRT disabled
  1739                           ;	RE3/MCLR pin function select bit
  1740                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1741                           ;	Code Protection bit
  1742                           ;	CP = OFF, Program memory code protection is disabled
  1743                           ;	Data Code Protection bit
  1744                           ;	CPD = OFF, Data memory code protection is disabled
  1745                           ;	Brown Out Reset Selection bits
  1746                           ;	BOREN = OFF, BOR disabled
  1747                           ;	Internal External Switchover bit
  1748                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1749                           ;	Fail-Safe Clock Monitor Enabled bit
  1750                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1751                           ;	Low Voltage Programming Enable bit
  1752                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1753                           ;	In-Circuit Debugger Mode bit
  1754                           ;	DEBUG = 0x1, unprogrammed default
  1755  2007                     	org	8199
  1756  2007  20D4               	dw	8404
  1757                           
  1758                           ;Config register CONFIG2 @ 0x2008
  1759                           ;	Brown-out Reset Selection bit
  1760                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1761                           ;	Flash Program Memory Self Write Enable bits
  1762                           ;	WRT = OFF, Write protection off
  1763  2008                     	org	8200
  1764  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     22      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    mostrar@num	PTR int  size(1) Largest target is 6
		 -> num(BANK0[6]), 

    separacion@num	PTR int  size(1) Largest target is 6
		 -> num(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_mostrar
    _mostrar->_tabla

Critical Paths under _main in BANK0

    _main->_separacion
    _separacion->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1426
                                             21 BANK0      1     1      0
                         _separacion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _separacion                                           6     5      1    1426
                                             15 BANK0      6     5      1
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0     382
                                              7 COMMON     4     4      0
                            _mostrar
 ---------------------------------------------------------------------------------
 (4) _mostrar                                              3     3      0     382
                                              4 COMMON     3     3      0
                              _tabla
 ---------------------------------------------------------------------------------
 (5) _tabla                                                4     2      2     283
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _separacion
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _setup

 _isr (ROOT)
   _mostrar
     _tabla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      12        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Apr 06 18:30:54 2022

                     l53 00AE             ___awdiv@sign 002C      ___wmul@multiplicand 0022  
                    l200 0255                      l112 022E                      l351 0117  
                    l198 023D                      l970 022F                      l980 0251  
                    l972 0233                      l990 00BB                      l974 0237  
                    l992 00BD                      l984 00AF                      l976 0244  
                    l994 00C1                      l986 00B2                      l978 024B  
                    l996 00C6                      l988 00B6                      l998 00CA  
                    u200 0237                      u201 0236                      u300 00F5  
                    u301 00F4                      u230 0251                      u231 0250  
                    u215 023E                      u320 0109                      u240 00B6  
                    u321 0108                      u305 00F1                      u241 00B5  
                    u225 0245                      u330 010E                      u250 00C1  
                    u331 010D                      u315 00FD                      u251 00C0  
                    u260 00D2                      u261 00D1                      u280 00E4  
                    u281 00E3                      u275 00D6                      u295 00E5  
                    _isr 01C6                      _num 0037                      fsr0 0004  
                    indf 0000                     l1000 00CC                     l1010 00E4  
                   l1002 00D2                     l1012 00F5                     l1004 00D5  
                   l1020 0109                     l1022 010E                     l1014 00FB  
                   l1006 00DC                     l1024 0113                     l1016 00FC  
                   l1008 00E0                     l1120 0256                     l1018 0103  
                   l1050 020A                     l1122 025B                     l1060 0211  
                   l1052 020B                     l1044 0200                     l1124 0267  
                   l1070 0216                     l1062 0212                     l1054 020E  
                   l1046 0207                     l1126 026A                     l1080 021D  
                   l1072 0219                     l1064 0213                     l1056 020F  
                   l1048 0209                     l1090 022D                     l1082 021E  
                   l1074 021A                     l1066 0214                     l1058 0210  
                   l1092 0026                     l1084 021F                     l1076 021B  
                   l1068 0215                     l1086 0223                     l1078 021C  
                   l1088 0227                     ?_isr 0070                     i1l42 01F7  
                   i1l35 01DD                     i1l60 019F                     i1l36 01D5  
                   i1l62 01C5                     i1l57 0179                     i1l59 018C  
                   i1l77 0172                     _TMR0 0001                     _main 0256  
                   btemp 007E                     start 000E                    ??_isr 0077  
                  ?_main 0070          __end_of___awdiv 0118                    _ANSEL 0188  
        ___awdiv@divisor 0026                    i1l940 011F                    i1l950 0138  
                  i1l942 0124                    i1l952 013D                    i1l944 0129  
                  i1l960 014C                    i1l936 0118                    i1l954 0142  
                  i1l946 012E                    i1l962 0171                    i1l938 011A  
                  i1l956 0147                    i1l948 0133          ___awdiv@counter 002B  
                  u34_20 01CA                    u34_21 01C9                    u35_20 01D0  
                  u35_21 01CF                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u36_20 01D9  
                  u36_21 01D8                    u37_20 01E1                    u37_21 01E0  
                  u38_20 01F1                    u38_21 01F0                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _tabla 0118                    _setup 0200                    pclath 000A  
        __end_of_mostrar 01C6                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0270                   ??_main 0035  
                 ?_tabla 0070         ___awdiv@dividend 0028                   ?_setup 0070  
                 _ANSELH 0189                   i1l1100 01D0                   i1l1030 017A  
                 i1l1110 01EB                   i1l1102 01D9                   i1l1032 018D  
                 i1l1112 01F1                   i1l1104 01DB                   i1l1034 01A0  
                 i1l1114 01F2                   i1l1106 01E1                   i1l1028 0174  
                 i1l1116 01F3                   i1l1108 01E7                   i1l1038 01B2  
                 i1l1170 0151                   i1l1168 01BA                   i1l1096 01C6  
                 i1l1098 01CA                   ___wmul 022F                ??___awdiv 002A  
       ___awdiv@quotient 002D                   _numero 003D                   saved_w 007E  
              ??_mostrar 0074              tabla@numero 0070  __end_of__initialization 001F  
         __pcstackCOMMON 0070             __pidataBANK0 0270            __end_of_tabla 0173  
          __end_of_setup 022F           _OPTION_REGbits 0081                  ??_tabla 0072  
                ??_setup 0020               __pbssBANK0 0036               __pmaintext 0256  
                ?___wmul 0020               __pintentry 0004                  ___awdiv 00AF  
            separacion@a 0034                  __ptext1 0200                  __ptext2 0023  
                __ptext3 022F                  __ptext4 00AF                  __ptext5 01C6  
                __ptext6 0173                  __ptext7 0118                  _mostrar 0173  
   _Bandera_multiplexado 007B     end_of_initialization 001F               _separacion 0023  
              _PORTBbits 0006                _PORTDbits 0008           __end_of___wmul 0256  
    start_initialization 0011              __end_of_isr 0200              ?_separacion 002F  
               ??___wmul 0024              __pdataBANK0 003D               tabla@valor 0073  
            __pbssCOMMON 007B                ___latbits 0002            __pcstackBANK0 0020  
          separacion@num 002F                 ?___awdiv 0026                 ?_mostrar 0070  
      interrupt_function 0004           ___wmul@product 0024                 _IOCBbits 0096  
             mostrar@num 0076        ___wmul@multiplier 0020                 _WPUBbits 0095  
               _contador 0036             ??_separacion 0030               _INTCONbits 000B  
     __end_of_separacion 00AF                 intlevel1 0000               _OSCCONbits 008F  
